import streamlit as st
from blockchain import Blockchain

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–ª–æ–∫—á–µ–π–Ω—É
if "blockchain" not in st.session_state:
    st.session_state.blockchain = Blockchain()
    st.session_state.pending_transactions = []

st.title("üß± –°–∏–º—É–ª—è—Ç–æ—Ä –±–ª–æ–∫—á–µ–π–Ω-—Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π")

st.subheader("‚ûï –î–æ–¥–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é")
sender = st.text_input("–í—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫")
receiver = st.text_input("–û–¥–µ—Ä–∂—É–≤–∞—á")
amount = st.number_input("–°—É–º–∞", min_value=0.01, step=0.01)

if st.button("–î–æ–¥–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é"):
    if sender and receiver:
        transaction = {"from": sender, "to": receiver, "amount": amount}
        st.session_state.pending_transactions.append(transaction)
        st.success("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –¥–æ–¥–∞–Ω–æ")
    else:
        st.warning("‚ö†Ô∏è –í—Å—ñ –ø–æ–ª—è –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ")

st.subheader("üî® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–ª–æ–∫—É")
if st.button("–°—Ç–≤–æ—Ä–∏—Ç–∏ –±–ª–æ–∫"):
    if st.session_state.pending_transactions:
        st.session_state.blockchain.add_block(st.session_state.pending_transactions)
        st.session_state.pending_transactions = []
        st.success("‚úÖ –ë–ª–æ–∫ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    else:
        st.warning("‚ö†Ô∏è –ù–µ–º–∞—î —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è")

st.subheader("üìÑ –õ–∞–Ω—Ü—é–≥ –±–ª–æ–∫—ñ–≤")
for block in st.session_state.blockchain.chain:
    st.markdown(f"### –ë–ª–æ–∫ ‚Ññ{block.index}")
    st.json({
        "–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó": block.transactions,
        "–•–µ—à": block.hash,
        "–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ö–µ—à": block.previous_hash,
        "Nonce": block.nonce,
        "–ß–∞—Å": block.timestamp
    })
